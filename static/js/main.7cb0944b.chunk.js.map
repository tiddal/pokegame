{"version":3,"sources":["styles/index.ts","containers/Pokedex/styles.ts","components/Pokecard/styles.ts","components/Pokecard/index.tsx","containers/Pokedex/index.tsx","pages/Pokegame/styles.ts","pages/Pokegame/index.tsx","App/App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","Content","isWinner","Result","typesColor","bug","water","fire","flying","electric","fairy","ghost","normal","type","Name","span","Image","Data","Pokecard","id","name","baseExperience","imageSource","toString","padStart","src","alt","Pokedex","pokemons","reduce","exp","pokemon","map","key","Pokegame","useState","playerOnePokedex","setPlayerOnePokedex","playerTwoPokedex","setPlayerTwoPokedex","evaluateWinner","playerOne","playerTwo","useEffect","pokemonsFakeDB","sort","Math","random","splice","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb0944b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  };\n\n  body, input, button {\n    font-family: 'Mulish', Roboto, Arial, Helvetica, sans-serif;\n  };\n\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\ninterface StylingProps {\n  isWinner: boolean;\n}\n\nconst Container = styled.div`\n  padding: 10px;\n`;\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 10px;\n  row-gap: 30px;\n  padding: 50px;\n  padding-top: 0;\n  border-radius: 15px;\n  ${({ isWinner }: StylingProps) => isWinner && 'border: 2px solid #ccc;'}\n`;\n\nconst Result = styled.div`\n  margin-top: -25px;\n  display: flex;\n  justify-self: center;\n  flex-direction: column;\n  grid-column: 1 / -1;\n  text-align: center;\n  h1 {\n    padding: 10px 60px;\n    text-transform: uppercase;\n    clip-path: polygon(15% 0%, 100% 0%, 85% 100%, 0% 100%); \n    background-color: #333;\n    color: #FF6970;\n    font-size: 18px;\n  }\n  ${({ isWinner }: StylingProps) => isWinner && `\n    h1 {\n      padding: 10px 100px;\n      color: #2AC289; \n      font-size: 24px;\n    };\n  `}\n  span {\n    font-size: 10px;\n    margin-top: 5px;\n    color: #aaa;\n    text-transform: uppercase;\n    font-weight: bold;\n  }\n`;\n\nexport { Container, Content, Result };\n","import styled from 'styled-components';\nimport { PokemonProps } from '.';\n\ninterface StylingProps {\n  type: PokemonProps['type'];\n}\n\nconst typesColor = {\n  bug: '#729F3F40',\n  water: '#4592C440',\n  fire: '#FD7D2440',\n  flying: '#3DC7EF40',\n  electric: '#EED53540',\n  fairy: '#FDB9E940',\n  ghost: '#7B61A240',\n  normal: '#A3ACAF40',\n};\n\nconst Container = styled.div`\n  background-color: #fafafa;\n  ${({ type }: StylingProps) => `background: linear-gradient(0deg, ${typesColor[type]} 0%, #fafafa 35%, #fafafa 100%);`}\n  border-radius: 8px;\n  box-shadow: 0px 5px 15px rgba(51, 51, 51, 0.25);\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Name = styled.span`\n  font-size: 20px;\n  color: #333333;\n  font-weight: 700;\n`;\n\nconst Image = styled.div`\n  width: 100px;\n  height: 100px;\n  margin: 20px 0;\n  cursor: pointer;\n  img{\n    width: 100%;\n    height: 100%;\n    transition: transform ease .3s, opacity ease .3s;\n    opacity: 0.7;\n    :hover {\n      transform: scale(1.25);\n      opacity: 1;\n    }\n  }\n`;\n\nconst Data = styled.div`\n  color: #666;\n  font-size: 12px;\n  text-transform: capitalize;\n`;\n\nexport {\n  Container, Content, Name, Image, Data,\n};\n","import React from 'react';\n\nimport {\n  Container, Content, Name, Image, Data,\n} from './styles';\n\nexport interface PokemonProps {\n  id: number;\n  name: string;\n  type: 'bug' | 'water' | 'fire' | 'flying' | 'electric' | 'fairy' | 'ghost' | 'normal';\n  baseExperience: number;\n}\n\nconst Pokecard: React.FC<PokemonProps> = ({\n  id, name, type, baseExperience,\n}) => {\n  const imageSource = `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${id.toString().padStart(3, '0')}.png`;\n  return (\n    <Container type={type}>\n      <Content>\n        <Name>{name}</Name>\n        <Image>\n          <img src={imageSource} alt={name} />\n        </Image>\n        <Data>\n          Type:\n          {' '}\n          {type}\n        </Data>\n        <Data>\n          EXP:\n          {' '}\n          {baseExperience}\n        </Data>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Pokecard;\n","import React from 'react';\n\nimport { Container, Content, Result } from './styles';\nimport Pokecard, { PokemonProps } from '../../components/Pokecard';\n\ninterface PokedexProps {\n  pokemons: PokemonProps[];\n  isWinner: boolean;\n}\n\nconst Pokedex: React.FC<PokedexProps> = ({ pokemons, isWinner }) => (\n  <Container>\n    <Content isWinner={isWinner}>\n      <Result isWinner={isWinner}>\n        <h1>{isWinner ? 'Winning hand!' : 'losing hand!'}</h1>\n        <span>\n          Total Experience:\n          {' '}\n          {pokemons.reduce((exp, pokemon) => exp + pokemon.baseExperience, 0)}\n        </span>\n      </Result>\n      {pokemons.map(({\n        id, name, type, baseExperience,\n      }) => <Pokecard key={id} id={id} name={name} type={type} baseExperience={baseExperience} />)}\n    </Content>\n  </Container>\n);\n\nexport default Pokedex;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  padding: 50px;\n  display: grid;\n  gap: 50px;\n  max-width: 1150px;\n  margin: auto;\n  align-content: center;\n`;\n\nexport default Container;\n","import React, { useState, useEffect } from 'react';\nimport { PokemonProps } from '../../components/Pokecard';\nimport Pokedex from '../../containers/Pokedex';\n\nimport Container from './styles';\n\nconst Pokegame: React.FC = () => {\n  const [playerOnePokedex, setPlayerOnePokedex] = useState<PokemonProps[]>([]);\n  const [playerTwoPokedex, setPlayerTwoPokedex] = useState<PokemonProps[]>([]);\n\n  useEffect(() => {\n    const pokemonsFakeDB: PokemonProps[] = [\n      {\n        id: 4, name: 'Charmander', type: 'fire', baseExperience: 62,\n      },\n      {\n        id: 7, name: 'Squirtle', type: 'water', baseExperience: 63,\n      },\n      {\n        id: 11, name: 'Metapod', type: 'bug', baseExperience: 72,\n      },\n      {\n        id: 12, name: 'Butterfree', type: 'flying', baseExperience: 178,\n      },\n      {\n        id: 25, name: 'Pikachu', type: 'electric', baseExperience: 112,\n      },\n      {\n        id: 39, name: 'Jigglypuff', type: 'fairy', baseExperience: 95,\n      },\n      {\n        id: 94, name: 'Gengar', type: 'ghost', baseExperience: 225,\n      },\n      {\n        id: 133, name: 'Eevee', type: 'normal', baseExperience: 65,\n      },\n    ];\n    pokemonsFakeDB.sort(() => Math.random() - 0.5);\n    setPlayerOnePokedex(pokemonsFakeDB.splice(0, pokemonsFakeDB.length / 2));\n    setPlayerTwoPokedex(pokemonsFakeDB);\n  }, []);\n\n  function evaluateWinner(playerOne: PokemonProps[], playerTwo: PokemonProps[]) {\n    const playerOneExperience = playerOne.reduce((exp, pokemon) => exp + pokemon.baseExperience, 0);\n    const playerTwoExperience = playerTwo.reduce((exp, pokemon) => exp + pokemon.baseExperience, 0);\n    return playerOneExperience > playerTwoExperience;\n  }\n\n  return (\n    <Container>\n      <Pokedex\n        pokemons={playerOnePokedex}\n        isWinner={evaluateWinner(playerOnePokedex, playerTwoPokedex)}\n      />\n      <Pokedex\n        pokemons={playerTwoPokedex}\n        isWinner={evaluateWinner(playerTwoPokedex, playerOnePokedex)}\n      />\n    </Container>\n  );\n};\n\nexport default Pokegame;\n","import React from 'react';\nimport GlobalStyle from '../styles';\nimport Pokegame from '../pages/Pokegame';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Pokegame />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}